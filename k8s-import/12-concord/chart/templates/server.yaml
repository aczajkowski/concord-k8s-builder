---
kind: ConfigMap
apiVersion: v1
metadata:
  name: server-conf
data:
{{ (tpl (.Files.Glob "files/server/server.conf").AsConfig . ) | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: concord-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: concord-server
  template:
    metadata:
      labels:
        app: concord-server
    spec:
      containers:
        - name: concord-server
          image: {{ .Values.registry }}/concord-server:{{ .Values.version }}
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          volumeMounts:
          - name: "cfg"
            mountPath: "/opt/concord/conf/server.conf"
            subPath: server.conf
          ports:
          - containerPort: 8001
          env:
          - name: CONCORD_CFG_FILE
            value: /opt/concord/conf/server.conf
      volumes:
        - name: cfg
          configMap:
            name: server-conf
{{- if eq .Values.expose.type "nodePort" }}
---
apiVersion: v1
kind: Service
metadata:
  name: concord-server
  labels:
    app: concord-server
spec:
  type: NodePort
  ports:
    - name: http
      port: {{ .Values.expose.port }}
      targetPort: 8001
  selector:
    app: concord-server
{{- else if eq .Values.expose.type "loadBalancer" }}
{{- $loadBalancer := .Values.expose.loadBalancer }}
---
apiVersion: v1
kind: Service
metadata:
  name: concord-server
  labels:
    app: concord-server
spec:
  type: LoadBalancer
  {{- with $loadBalancer.sourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if $loadBalancer.IP }}
  loadBalancerIP: {{ $loadBalancer.IP }}
  {{- end }}
  ports:
    - name: http
      port: {{ .Values.expose.port }}
      targetPort: 8001
  selector:
    app: concord-server
{{- else if eq .Values.expose.type "ingress" }}
---
apiVersion: v1
kind: Service
metadata:
  name: concord-server
  labels:
    app: concord-server
spec:
  type: ClusterIP
  ports:
    - name: http
      port: {{ .Values.expose.port }}
      targetPort: 8001
  selector:
    app: concord-server
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: concord-ingress
{{- if .Values.expose.ingress.annotations }}
{{- with .Values.expose.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
spec:
  {{- if .Values.expose.tls.enabled }}
  tls:
    - secretName: {{ .Values.expose.tls.secretName }}
      hosts:
        - {{ .Values.expose.ingress.host }}
  {{- end }}
  rules:
  - host: {{ .Values.expose.ingress.host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: concord-server
          servicePort: {{ .Values.expose.port }}
{{- end }}
