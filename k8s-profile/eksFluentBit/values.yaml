global:
## Override the deployment namespace
#   namespaceOverride:

image:
  repository: amazon/aws-for-fluent-bit
  tag: 2.2.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  parsersFiles:
    - /fluent-bit/parsers/parsers.conf
  # extraParsers: |
  #   [PARSER]
  #       Name   logfmt
  #       Format logfmt

input:
  tag: "kube.*"
  path: "/var/log/containers/*presto*.log"
  db: "/var/log/flb_kube.db"
  parser: docker
  dockerMode: "On"
  memBufLimit: 5MB
  skipLongLines: "On"
  refreshInterval: 10

# extraInputs: |
#   [INPUT]
#       Name         winlog
#       Channels     Setup,Windows PowerShell
#       Interval_Sec 1
#       DB           winlog.sqlite


filter:
  match: "kube.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "data"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "On"

# extraFilters: |
#   [FILTER]
#       Name   grep
#       Match  *
#       Exclude log lvl=debug*

cloudWatch:
  enabled: true
  match: "*"
  region: "${clusterRequest.region}"
  logGroupName: "/aws/eks/fluentbit-cloudwatch/presto/logs"
  logStreamName:
  logStreamPrefix: "presto-${clusterRequest.clusterName}"
  logKey:
  logFormat:
  roleArn:
  autoCreateGroup: true
  endpoint:
  credentialsEndpoint:  {}

firehose:
  enabled: false
  match: "*"
  region: "${clusterRequest.region}"
  deliveryStream: "presto-logs-${clusterRequest.clusterName}"
  dataKeys:
  roleArn:
  endpoint:
  timeKey:

kinesis:
  enabled: false
  match: "*"
  region: "${clusterRequest.region}"
  stream: "presto-logs-${clusterRequest.clusterName}"
  partitionKey: "container_id"
  appendNewline:
  dataKeys:
  roleArn:
  timeKey:
  timeKeyFormat:

# extraOutputs: |
#   [OUTPUT]
#     Name file
#     Format template
#     Template {time} used={Mem.used} free={Mem.free} total={Mem.total}

serviceAccount:
  create: true
  annotations: {}
  name:

resources:
  limits:
    memory: 500Mi
  requests:
    cpu: 500m
    memory: 500Mi

## Assign a PriorityClassName to pods if set
# priorityClassName: system-node-critical
